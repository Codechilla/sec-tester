version: '3.8'
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-build
    working_dir: /app/frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app/frontend
    command: ["npm", "run", "dev"]

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-build
    working_dir: /app/backend
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
    command: ["conda", "run", "-n", "sec-tester-env", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001"]
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: secuser
      POSTGRES_PASSWORD: secpass
      POSTGRES_DB: secdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  chroma:
    image: chromadb/chroma:latest
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.15
    restart: always
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/testpass
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    restart: always
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  chroma_data:
  neo4j_data:
  elasticsearch_data:
  ollama_data:
